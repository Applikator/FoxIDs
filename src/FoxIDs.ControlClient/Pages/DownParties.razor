@page "/{tenantName}/downparties"
@inherits PageBase

<div class="d-flex">
    <div class="mr-auto">
    </div>
    <div class="p-2">
        <div class="btn-group" role="group">
            <button id="btnGroupCreateDownParty" type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="oi oi-plus" aria-hidden="true"></span> Create Down-party
            </button>
            <div class="dropdown-menu" aria-labelledby="btnGroupCreateDownParty">
                <button class="dropdown-item btn btn-link" type="button" @onclick="@(() => ShowCreateDownParty(PartyTypes.Oidc))">OpenID Connect</button>
                <button class="dropdown-item btn btn-link" type="button" @onclick="@(() => ShowCreateDownParty(PartyTypes.OAuth2))">OAuth 2.0</button>
                <button class="dropdown-item btn btn-link" type="button" @onclick="@(() => ShowCreateDownParty(PartyTypes.Saml2))">SAML 2.0</button>
            </div>
        </div>
    </div>
</div>

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link active">Down-parties</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@upPartyHref">Up-parties</a>
    </li>
</ul>

<div class="tab-content">
    <PageEditForm @ref="downPartyFilterForm" TModel="FilterPartyViewModel" OnValidSubmit="OnDownPartyFilterValidSubmitAsync">
        <FInputTextFilter @bind-Value="downPartyFilterForm.Model.FilterName" For="@(() => downPartyFilterForm.Model.FilterName)" />
    </PageEditForm>

    <ul class="list-group">
        @foreach (var downParty in downParties)
        {
        <li class="list-group-item @(downParty.Edit ? "active" : string.Empty)">
            @if (!downParty.Error.IsNullOrWhiteSpace())
            {
                <div class="alert alert-danger" role="alert">
                    @downParty.Error
                </div>
            }
            @if (downParty.Edit)
            {
                if (downParty.Type == PartyTypes.Oidc)
                {
                    <EOidcDownParty OnStateHasChanged="OnStateHasChangedAsync" DownParties="downParties" DownParty="downParty" TenantName="@TenantName" />
                }
                else if (downParty.Type == PartyTypes.OAuth2)
                {
                    <EOAuthDownParty OnStateHasChanged="OnStateHasChangedAsync" DownParties="downParties" DownParty="downParty" TenantName="@TenantName" />
                }
                else if (downParty.Type == PartyTypes.Saml2)
                {
                    <ESamlDownParty OnStateHasChanged="OnStateHasChangedAsync" DownParties="downParties" DownParty="downParty" TenantName="@TenantName" />
                }
            }
            else
            {
                <button class="btn btn-link" @onclick="@(async () => await ShowUpdateDownPartyAsync(downParty))">
                    @DownPartyInfoText(downParty)
                </button>
            }
        </li>
        }
    </ul>
</div>
