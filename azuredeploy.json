{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "siteLocation": {
      "defaultValue": "West Europe",
      "type": "string",
      "metadata": {
        "description": "Site location."
      }
    },
    "prefixName": {
      "defaultValue": "foxids",
      "type": "string",
      "metadata": {
        "description": "Prefix of resource names."
      }
    },
    "appServicePlanSize": {
      "defaultValue": "S1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3",
        "P1",
        "P2",
        "P3",
        "P4"
      ],
      "type": "string",
      "metadata": {
        "description": "The instance size of the App Service Plan."
      }
    },
    "appServicePlanSku": {
      "defaultValue": "Standard",
      "allowedValues": [
        "Free",
        "Shared",
        "Basic",
        "Standard",
        "Premium"
      ],
      "type": "string",
      "metadata": {
        "description": "The pricing tier of the App Service plan."
      }
    },
    "keyVaultSkuName": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ],
      "metadata": {
        "description": "Specifies whether the key vault is a standard vault or a premium vault."
      }
    },
    "sendgridFromEmail": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional, Sendgrid from email address."
      }
    },
    "sendgridApiKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional, Sendgrid API key."
      }
    },
    "repoURL": {
      "type": "string",
      "defaultValue": "https://github.com/ITfoxtec/FoxIDs.git",
      "metadata": {
        "description": "The URL for the GitHub repository that contains the project to deploy."
      }
    },
    "branch": {
      "type": "string",
      "defaultValue": "master",
      "metadata": {
        "description": "The branch of the GitHub repository to use."
      }
    }
  },
  "variables": {
    "suffix": "[uniqueString(resourceGroup().id, resourceGroup().location)]",
    "foxidsSiteName": "[toLower(concat(parameters('prefixName'), variables('suffix')))]",
    "foxidsControlSiteName": "[toLower(concat(parameters('prefixName'), 'control', variables('suffix')))]",
    "foxidsSiteEndpoint": "[concat('https://', variables('foxidsSiteName'), '.azurewebsites.net')]",
    "foxidsControlSiteEndpoint": "[concat('https://', variables('foxidsControlSiteName'), '.azurewebsites.net')]",
    "serverfarmsName": "[toLower(concat(parameters('prefixName'), variables('suffix')))]",
    "appInsightsName": "[toLower(concat(parameters('prefixName'), variables('suffix')))]",
    "redisName": "[toLower(concat(parameters('prefixName'), variables('suffix')))]",
    "keyVaultName": "[toLower(concat(parameters('prefixName'), variables('suffix')))]",
    "cosmosDbName": "[toLower(concat(parameters('prefixName'), variables('suffix')))]",
    "location": "[parameters('siteLocation')]"
  },
  "resources": [
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2015-04-08",
      "name": "[variables('cosmosDbName')]",
      "location": "[variables('location')]",
      "tags": {
        "defaultExperience": "DocumentDB"
      },
      "kind": "GlobalDocumentDB",
      "properties": {
        "enableAutomaticFailover": false,
        "enableMultipleWriteLocations": false,
        "isVirtualNetworkFilterEnabled": false,
        "virtualNetworkRules": [],
        "databaseAccountOfferType": "Standard",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session",
          "maxIntervalInSeconds": 5,
          "maxStalenessPrefix": 100
        },
        "locations": [
          {
            "locationName": "[variables('location')]",
            "provisioningState": "Succeeded",
            "failoverPriority": 0
          }
        ],
        "capabilities": []
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2015-05-01",
      "name": "[variables('appInsightsName')]",
      "location": "[variables('location')]",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('foxidsSiteName'))]": "Resource",
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('foxidsControlSiteName'))]": "Resource"
      },
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "IbizaAIExtension",
        "DisableIpMasking": true,
        "applicationId": "[variables('appInsightsName')]"
      }
    },
    {
      "type": "Microsoft.Cache/Redis",
      "apiVersion": "2017-10-01",
      "name": "[variables('redisName')]",
      "location": "[variables('location')]",
      "properties": {
        "sku": {
          "name": "Standard",
          "family": "C",
          "capacity": "0"
        },
        "enableNonSslPort": false,
        "redisConfiguration": {
          "maxclients": "256",
          "maxmemory-reserved": "2",
          "maxfragmentationmemory-reserved": "12",
          "maxmemory-delta": "2"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2016-10-01",
      "name": "[variables('keyVaultName')]",
      "location": "[variables('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "[parameters('keyVaultSkuName')]"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(concat('Microsoft.Web/sites/', variables('foxidsSiteName')), '2018-02-01', 'Full').identity.principalId]",
            "permissions": {
              "keys": [
                "Get",
                "List",
                "Decrypt",
                "Sign"
              ],
              "secrets": [
                "get",
                "List"
              ],
              "certificates": [
                "Get",
                "List"
              ]
            }
          },
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(concat('Microsoft.Web/sites/', variables('foxidsControlSiteName')), '2018-02-01', 'Full').identity.principalId]",
            "permissions": {
              "keys": [
                "Get",
                "List"
              ],
              "secrets": [
                "get",
                "List"
              ],
              "certificates": [
                "Get",
                "List",
                "Create",
                "Delete",
                "Import",
                "Update"
              ]
            }
          }
        ],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableSoftDelete": true
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "name": "[variables('serverfarmsName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "[parameters('appServicePlanSize')]",
        "tier": "[parameters('appServicePlanSku')]",
        "capacity": "1"
      },
      "properties": {
        "name": "[variables('serverfarmsName')]",
        "workerSize": "0",
        "numberOfWorkers": "1"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('foxidsSiteName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', variables('serverfarmsName'))]"
      ],
      "kind": "app",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[variables('foxidsSiteName')]",
        "siteConfig": {
          "netFrameworkVersion": "v5.0",
          "ftpsState": "Disabled",
          "alwaysOn": true,
          "webSocketsEnabled": false
        },
        "reserved": false,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarmsName'))]",
        "clientAffinityEnabled": false,
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]",
        "httpsOnly": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('foxidsControlSiteName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', variables('serverfarmsName'))]"
      ],
      "kind": "app",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[variables('foxidsControlSiteName')]",
        "siteConfig": {
          "netFrameworkVersion": "v5.0",
          "ftpsState": "Disabled",
          "alwaysOn": true,
          "webSocketsEnabled": false
        },
        "reserved": false,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarmsName'))]",
        "clientAffinityEnabled": false,
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]",
        "httpsOnly": true
      }
    },
    {
      "type": "Microsoft.Web/sites/slots",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('foxidsSiteName'), '/test')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('foxidsSiteName'))]"
      ],
      "kind": "app",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "siteConfig": {
          "netFrameworkVersion": "v5.0",
          "ftpsState": "Disabled",
          "alwaysOn": true,
          "webSocketsEnabled": false,
          "autoSwapSlotName": "production"
        },
        "reserved": false,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarmsName'))]",
        "clientAffinityEnabled": false,
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]",
        "httpsOnly": true
      }
    },
    {
      "type": "Microsoft.Web/sites/slots",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('foxidsControlSiteName'), '/test')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('foxidsControlSiteName'))]"
      ],
      "kind": "app",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "siteConfig": {
          "netFrameworkVersion": "v5.0",
          "ftpsState": "Disabled",
          "alwaysOn": true,
          "webSocketsEnabled": false,
          "autoSwapSlotName": "production"
        },
        "reserved": false,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverfarmsName'))]",
        "clientAffinityEnabled": false,
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]",
        "httpsOnly": true
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('foxidsSiteName'), '/appsettings')]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('foxidsSiteName'))]",
        "[resourceId('microsoft.insights/components/', variables('appInsightsName'))]",
        "[concat('Microsoft.DocumentDB/databaseAccounts/', variables('cosmosDbName'))]",
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
      ],
      "properties": {
        "APPINSIGHTS:INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]",
        "ApplicationInsights:InstrumentationKey": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]",
        "Settings:CosmosDb:EndpointUri": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('cosmosDbName'))).documentEndpoint]",
        "Settings:KeyVault:EndpointUri": "[reference(concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))).vaultUri]",
        "Settings:Sendgrid:FromEmail": "[parameters('sendgridFromEmail')]"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('foxidsControlSiteName'), '/appsettings')]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('foxidsControlSiteName'))]",
        "[resourceId('microsoft.insights/components/', variables('appInsightsName'))]",
        "[concat('Microsoft.DocumentDB/databaseAccounts/', variables('cosmosDbName'))]",
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
      ],
      "properties": {
        "APPINSIGHTS:INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]",
        "ApplicationInsights:InstrumentationKey": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]",
        "Settings:FoxIDsEndpoint": "[variables('foxidsSiteEndpoint')]",
        "Settings:FoxIDsControlEndpoint": "[variables('foxidsControlSiteEndpoint')]",
        "MasterSeedEnabled": false,
        "Settings:CosmosDb:EndpointUri": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('cosmosDbName'))).documentEndpoint]",
        "Settings:KeyVault:EndpointUri": "[reference(concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))).vaultUri]",
        "Settings:ApplicationInsights:AppId": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).AppId]"
      }
    },
    {
      "type": "Microsoft.Web/sites/slots/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('foxidsSiteName'), '/test/appsettings')]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('foxidsSiteName'))]",
        "[resourceId('Microsoft.Web/sites/slots', variables('foxidsSiteName'), 'test')]",
        "[resourceId('microsoft.insights/components/', variables('appInsightsName'))]",
        "[concat('Microsoft.DocumentDB/databaseAccounts/', variables('cosmosDbName'))]",
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
      ],
      "properties": {
        "PROJECT": "src/FoxIDs/FoxIDs.csproj",
        "SCM_BUILD_ARGS": "-p:Configuration=Release",
        "APPINSIGHTS:INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]",
        "ApplicationInsights:InstrumentationKey": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]",
        "Settings:CosmosDb:EndpointUri": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('cosmosDbName'))).documentEndpoint]",
        "Settings:KeyVault:EndpointUri": "[reference(concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))).vaultUri]",
        "Settings:Sendgrid:FromEmail": "[parameters('sendgridFromEmail')]"
      }
    },
    {
      "type": "Microsoft.Web/sites/slots/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('foxidsControlSiteName'), '/test/appsettings')]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('foxidsControlSiteName'))]",
        "[resourceId('Microsoft.Web/sites/slots', variables('foxidsControlSiteName'), 'test')]",
        "[resourceId('microsoft.insights/components/', variables('appInsightsName'))]",
        "[concat('Microsoft.DocumentDB/databaseAccounts/', variables('cosmosDbName'))]",
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
      ],
      "properties": {
        "PROJECT": "src/FoxIDs.Control/FoxIDs.Control.csproj",
        "SCM_BUILD_ARGS": "-p:Configuration=Release",
        "APPINSIGHTS:INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]",
        "ApplicationInsights:InstrumentationKey": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]",
        "Settings:FoxIDsEndpoint": "[variables('foxidsSiteEndpoint')]",
        "Settings:FoxIDsControlEndpoint": "[variables('foxidsControlSiteEndpoint')]",
        "Settings:CosmosDb:EndpointUri": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('cosmosDbName'))).documentEndpoint]",
        "Settings:KeyVault:EndpointUri": "[reference(concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))).vaultUri]",
        "Settings:ApplicationInsights:AppId": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).AppId]"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('foxidsSiteName'), '/slotconfignames')]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('foxidsSiteName'))]",
        "[resourceId('Microsoft.Web/sites/config', variables('foxidsSiteName'), 'appsettings')]"
      ],
      "properties": {
        "appSettingNames": [ "PROJECT", "SCM_BUILD_ARGS", "APPINSIGHTS:INSTRUMENTATIONKEY", "ApplicationInsights:InstrumentationKey", "Settings:CosmosDb:EndpointUri", "Settings:KeyVault:EndpointUri", "Settings:Sendgrid:FromEmail" ]
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('foxidsControlSiteName'), '/slotconfignames')]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('foxidsControlSiteName'))]",
        "[resourceId('Microsoft.Web/sites/config', variables('foxidsControlSiteName'), 'appsettings')]"
      ],
      "properties": {
        "appSettingNames": [ "PROJECT", "SCM_BUILD_ARGS", "APPINSIGHTS:INSTRUMENTATIONKEY", "ApplicationInsights:InstrumentationKey", "Settings:FoxIDsEndpoint", "Settings:FoxIDsControlEndpoint", "MasterSeedEnabled", "Settings:CosmosDb:EndpointUri", "Settings:KeyVault:EndpointUri" ]
      }
    },   
    {
      "type": "Microsoft.Web/sites/slots/sourcecontrols",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('foxidsSiteName'), '/test/web')]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('foxidsSiteName'))]",
        "[resourceId('Microsoft.Web/sites/config', variables('foxidsSiteName'), 'slotconfignames')]",
        "[resourceId('Microsoft.Web/sites/slots', variables('foxidsSiteName'), 'test')]",
        "[resourceId('Microsoft.Web/sites/slots/config', variables('foxidsSiteName'), 'test', 'appsettings')]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'Settings--CosmosDb--PrimaryKey')]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'Settings--RedisCache--ConnectionString')]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'Settings--Sendgrid--ApiKey')]"
      ],
      "properties": {
        "RepoUrl": "[parameters('repoURL')]",
        "branch": "[parameters('branch')]",
        "IsManualIntegration": false,
        "deploymentRollbackEnabled": true
      }
    },
    {
      "type": "Microsoft.Web/sites/slots/sourcecontrols",
      "apiVersion": "2018-11-01",
      "name": "[concat(variables('foxidsControlSiteName'), '/test/web')]",
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('foxidsControlSiteName'))]",
        "[resourceId('Microsoft.Web/sites/config', variables('foxidsControlSiteName'), 'slotconfignames')]",
        "[resourceId('Microsoft.Web/sites/slots', variables('foxidsControlSiteName'), 'test')]",
        "[resourceId('Microsoft.Web/sites/slots/config', variables('foxidsControlSiteName'), 'test', 'appsettings')]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'Settings--CosmosDb--PrimaryKey')]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'Settings--RedisCache--ConnectionString')]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'Settings--Sendgrid--ApiKey')]"
      ],
      "properties": {
        "RepoUrl": "[parameters('repoURL')]",
        "branch": "[parameters('branch')]",
        "IsManualIntegration": false,
        "deploymentRollbackEnabled": true
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2016-10-01",
      "name": "[concat(variables('keyVaultName'), '/Settings--RedisCache--ConnectionString')]",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
        "[concat('Microsoft.Cache/Redis/', variables('redisName'))]"
      ],
      "properties": {
        "value": "[concat(variables('redisName'),'.redis.cache.windows.net,abortConnect=false,ssl=true,password=', listKeys(resourceId('Microsoft.Cache/Redis', variables('keyVaultName')), '2015-08-01').primaryKey)]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2016-10-01",
      "name": "[concat(variables('keyVaultName'), '/Settings--CosmosDb--PrimaryKey')]",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",
        "[concat('Microsoft.DocumentDB/databaseAccounts/', variables('cosmosDbName'))]"
      ],
      "properties": {
        "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbName')), '2015-11-06').primaryMasterKey]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2016-10-01",
      "name": "[concat(variables('keyVaultName'), '/Settings--Sendgrid--ApiKey')]",
      "dependsOn": [
        "[concat('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]"
      ],
      "properties": {
        "value": "[parameters('sendgridApiKey')]"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2017-05-01",
      "name": "[guid(uniqueString(variables('appInsightsName'), 'read', variables('foxidsControlSiteName')))]",
      "scope": "[format('Microsoft.Insights/components/{0}', variables('appInsightsName'))]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "principalId": "[reference(concat('Microsoft.Web/sites/', variables('foxidsControlSiteName')), '2018-02-01', 'Full').identity.principalId]"
      },
      "dependsOn": [
        "[concat('Microsoft.Web/sites/', variables('foxidsControlSiteName'))]",
        "[resourceId('microsoft.insights/components/', variables('appInsightsName'))]"
      ]
    }
  ]
}
