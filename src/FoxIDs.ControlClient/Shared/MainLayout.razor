@inherits LayoutComponentBase

<nav class="navbar navbar-expand navbar-light bg-light navbar-main">
    <a class="navbar-brand">FoxIDs</a>
    <AuthorizeView>
        <Authorized>
            <ul class="navbar-nav mr-auto">
                @if (!RouteBindingLogic.IsMasterTenant)
                {
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" id="trackNavbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Select Track
                        </a>
                        <div class="dropdown-menu searchDropdown" aria-labelledby="trackNavbarDropdown">
                            <div class="input-group mb-3">
                                <input type="text" class="form-control" placeholder="Search track">
                                <div class="input-group-append">
                                    <button class="btn btn-primary" type="submit">Go</button>
                                </div>
                            </div>
                            <a class="dropdown-item">Track a</a>
                            <a class="dropdown-item">Track b</a>
                            <a class="dropdown-item">Track c</a>
                            <a class="dropdown-item">Track d</a>
                        </div>
                    </li>
                }
            </ul>
            <ul class="navbar-nav">
                @if (RouteBindingLogic.IsMasterTenant)
                {
                    <li class="nav-item">
                        <button class="nav-link btn btn-link" @onclick="@(() => { ShowCreateTenantModal(); })"><span class="oi oi-plus" aria-hidden="true"></span> Create Tenant</button>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <a class="nav-link"><span class="oi oi-plus" aria-hidden="true"></span> Create Track</a>
                    </li>
                }
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" id="meNavbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <span class="oi oi-person" aria-hidden="true"></span>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="meNavbarDropdown">
                        <button class="dropdown-item btn btn-link" @onclick="@(() => { myProfileModal.Show(); })">
                            My Profile<br/>
                            <small>@context.User.Claims.Where(c => c.Type == JwtClaimTypes.Email).Select(c => c.Value).FirstOrDefault()</small>
                        </button>                        
                        <div class="dropdown-divider"></div>
                        <LoginDisplay />
                    </div>
                </li>
            </ul>
        </Authorized>
    </AuthorizeView>
</nav>

<AuthorizeView>
    <Authorized>
        <nav class="navbar navbar-expand navbar-light bg-light navbar-second">
            <div class="container-lg">
                <ul class="navbar-nav">
                    @if (RouteBindingLogic.IsMasterTenant)
                    {
                        <TenantLiNavLink href="tenants">
                            Tenants
                        </TenantLiNavLink>
                    }
                    <TenantLiNavLink href="parties">
                        Parties
                    </TenantLiNavLink>
                    <TenantLiNavLink href="users">
                        Users
                    </TenantLiNavLink>
                    <TenantLiNavLink href="certificates">
                        Certificates
                    </TenantLiNavLink>
                    <TenantLiNavLink href="text">
                        Text
                    </TenantLiNavLink>
                    @if (RouteBindingLogic.IsMasterTenant)
                    {
                        <TenantLiNavLink href="passwordrisklist">
                            Password Risk
                        </TenantLiNavLink>
                    }
                </ul>
            </div>
        </nav>
    </Authorized>
</AuthorizeView>

<Modal @ref="createTenantModal" Title="Create Tenant">
    <PageEditForm @ref="createTenantForm" TModel="CreateTenantViewModel" OnValidSubmit="OnCreateTenantValidSubmitAsync">
        <div class="modal-body">
            <div class="form-group active-group">
                <InputText @bind-Value="createTenantForm.Model.Name" class="form-control input-control" autofocus />
                <Label For="@(() => createTenantForm.Model.Name)" class="label-control" />
                <ValidationMessage For="@(() => createTenantForm.Model.Name)" />
            </div>
            <div class="form-group active-group">
                <InputText @bind-Value="createTenantForm.Model.AdministratorEmail" class="form-control input-control" />
                <Label For="@(() => createTenantForm.Model.AdministratorEmail)" class="label-control" />
                <ValidationMessage For="@(() => createTenantForm.Model.AdministratorEmail)" />
            </div>
            <div class="form-group active-group">
                <div class="input-group">
                    <InputText @bind-Value="createTenantForm.Model.AdministratorPassword" type="@(showCreateTenantPassword ? "text" : "password")" class="form-control input-control" />
                    <Label For="@(() => createTenantForm.Model.AdministratorPassword)" class="label-control" />
                    <div class="input-group-append">
                        <button type="button" class="btn btn-info" @onclick="@(() => showCreateTenantPassword = !showCreateTenantPassword)"><span class="oi oi-eye" aria-hidden="true"></span></button>
                    </div>
                </div>
                <ValidationMessage For="@(() => createTenantForm.Model.AdministratorPassword)" />
            </div>

            <ul class="list-group list-group-flush">
                @foreach (var receipt in createTenantReceipt)
                {
                    <li class="list-group-item"><span class="oi oi-check" style="color: #62cd62;" aria-hidden="true"></span> @receipt</li>
                }
            </ul>
        </div>
        <div class="modal-footer">
            @if (!createTenantDone)
            {
                <button type="submit" class="btn btn-primary">Create</button>
                <button type="button" class="btn btn-secondary" @onclick="@(() => createTenantModal.Hide())">Cancel</button>
            }
            else
            {
                <button type="button" class="btn btn-secondary" @onclick="@(() => createTenantModal.Hide())">Close</button>
            }
        </div>
    </PageEditForm>
</Modal>

<Modal @ref="myProfileModal" Title="My Profile - show claims">
    <ul class="list-group list-group-flush">
        @if(myProfileClaims != null) {
            @foreach (var claim in myProfileClaims)
            {
                <li class="list-group-item">@claim.Type: @claim.Value</li>
            }
        }
    </ul>
</Modal>

<div class="container-lg main-container">
    <AuthorizeView>
        <NotAuthorized>
            <p>Authentication is in progress...</p>
        </NotAuthorized>
    </AuthorizeView>
    @Body
</div>


