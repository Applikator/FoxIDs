@page "/{tenantName}/downparties"
@inherits PageBase

<div class="d-flex">
    <div class="mr-auto p-2">
        <h3>Parties</h3>
    </div>
    <div class="p-2">
        <div class="btn-group" role="group">
            <button id="btnGroupCreateDownParty" type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="oi oi-plus" aria-hidden="true"></span> Create Down Party
            </button>
            <div class="dropdown-menu" aria-labelledby="btnGroupCreateDownParty">
                <button class="dropdown-item btn btn-link" @onclick="@(async () => await ShowCreateDownPartyModalAsync(PartyTypes.Oidc))">OpenID Connect</button>
                <button class="dropdown-item btn btn-link" @onclick="@(async () => await ShowCreateDownPartyModalAsync(PartyTypes.OAuth2))">OAuth 2.0</button>
                <button class="dropdown-item btn btn-link" @onclick="@(async () => await ShowCreateDownPartyModalAsync(PartyTypes.Saml2))">Saml 2.0</button>
            </div>
        </div>
    </div>
</div>

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link active">Down Parties</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@upPartyHref">Up Parties</a>
    </li>
</ul>

<div class="tab-content">
    <div>
        <PageEditForm @ref="downPartyFilterForm" TModel="FilterPartyViewModel" OnValidSubmit="OnDownPartyFilterValidSubmitAsync">
            <FInputTextFilter @bind-Value="downPartyFilterForm.Model.FilterName" For="@(() => downPartyFilterForm.Model.FilterName)" />
        </PageEditForm>

        <ul class="list-group list-group-flush">
            @foreach (var downParty in downParties)
            {
                <li class="list-group-item">
                    <button class="btn btn-link" @onclick="@(async () => await ShowUpdateDownPartyAsync(@downParty.Type, @downParty.Name))">
                        @downParty.Name, type: @downParty.Type<br />
                    </button>
                </li>
            }
        </ul>
    </div>
</div>

<Modal @ref="editSamlDownPartyModal" Title="@($"{(createMode ? "Create" : "Update")} Saml Down Party")">
    <PageEditForm @ref="editSamlDownPartyForm" TModel="SamlDownPartyViewModel" OnValidSubmit="OnEditSamlDownPartyValidSubmitAsync">
        <div class="modal-body">
            <div class="form-group active-group @(editSamlDownPartyForm.Model.AllowUpPartyNames.Count() > 0 ? "active" : "")">
                <ul class="list-group">
                    @if (editSamlDownPartyForm.Model.AllowUpPartyNames.Count() <= 0)
                    {
                        <li class="list-group-item p-0">
                            <div class="d-flex">
                                <div class="mr-auto px-3 py-1">
                                </div>
                                <div class="p-0">
                                    <button type="button" class="btn btn-link px-2 py-1" title="Remove" disabled><span class="oi oi-delete" aria-hidden="true"></span></button>
                                </div>
                            </div>
                        </li>
                    }
                    else
                    {
                        @foreach (var allowUpPartyName in editSamlDownPartyForm.Model.AllowUpPartyNames)
                        {
                            <li class="list-group-item p-0">
                                <div class="d-flex">
                                    <div class="mr-auto px-3 py-1">
                                        @allowUpPartyName
                                    </div>
                                    <div class="p-0">
                                        <button type="button" class="btn btn-link px-2 py-1" title="Remove" @onclick="@(() => RemoveSamlAllowUpPartyName(allowUpPartyName))"><span class="oi oi-delete" aria-hidden="true"></span></button>
                                    </div>
                                </div>
                            </li>
                        }
                    }
                </ul>
                <Label For="@(() => editSamlDownPartyForm.Model.AllowUpPartyNames)" class="label-control" />
                <ValidationMessage For="@(() => editSamlDownPartyForm.Model.AllowUpPartyNames)" />

                <ul class="navbar-nav mr-auto">
                    <li class="nav-item dropdown">
                        <button type="button" class="nav-link dropdown-toggle btn btn-link btn-xs" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <span class="oi oi-plus" aria-hidden="true"></span> Add allow up party
                        </button>

                        <div class="dropdown-menu searchDropdown" aria-labelledby="allowUpPartyNamesDropdown">
                            <PageEditForm @ref="allowUpPartyNamesFilterForm" TModel="FilterUpPartyViewModel" OnValidSubmit="OnAllowUpPartyNamesFilterValidSubmitAsync">
                                <div class="form-group active-group pb-0">
                                    <FInputTextFilter @bind-Value="allowUpPartyNamesFilterForm.Model.FilterName" For="@(() => allowUpPartyNamesFilterForm.Model.FilterName)" IncludeActiveFormGroup="false" />
                                </div>
                            </PageEditForm>
                            @if (allowUpPartyFilters != null)
                            {
                                @foreach (var allowUpPartyFilter in allowUpPartyFilters)
                                {
                                    <button class="dropdown-item btn btn-link" @onclick="@(() => AddSamlAllowUpPartyName(allowUpPartyFilter.Name))">
                                        @allowUpPartyFilter.Name, type: @allowUpPartyFilter.Type
                                    </button>
                                }
                            }
                        </div>
                    </li>
                </ul>
            </div>
            <FInputText @bind-Value="editSamlDownPartyForm.Model.Name" For="@(() => editSamlDownPartyForm.Model.Name)" Focus="true" />
            <FInputText @bind-Value="editSamlDownPartyForm.Model.Issuer" For="@(() => editSamlDownPartyForm.Model.Issuer)" />
            <FInputTextList @bind-ValueList="editSamlDownPartyForm.Model.AcsUrls" For="@(() => editSamlDownPartyForm.Model.AcsUrls)" />
            <div class="row active-group-outline">
                <div class="col">
                    <div class="form-group active-group">
                        <FInputSelect @bind-Value="editSamlDownPartyForm.Model.AuthnRequestBinding" For="@(() => editSamlDownPartyForm.Model.AuthnRequestBinding)" IncludeActiveFormGroup="false">
                            <option value="@SamlBindingType.Redirect">@SamlBindingType.Redirect</option>
                            <option value="@SamlBindingType.Post">@SamlBindingType.Post</option>
                        </FInputSelect>
                    </div>
                </div>
                <div class="col">
                    <div class="form-group active-group">
                        <FInputSelect @bind-Value="editSamlDownPartyForm.Model.AuthnResponseBinding" For="@(() => editSamlDownPartyForm.Model.AuthnResponseBinding)" IncludeActiveFormGroup="false">
                            <option value="@SamlBindingType.Redirect">@SamlBindingType.Redirect</option>
                            <option value="@SamlBindingType.Post">@SamlBindingType.Post</option>
                        </FInputSelect>
                    </div>
                </div>
            </div>
            <FInputText @bind-Value="editSamlDownPartyForm.Model.LoggedOutUrl" For="@(() => editSamlDownPartyForm.Model.LoggedOutUrl)" />
            <FInputText @bind-Value="editSamlDownPartyForm.Model.SingleLogoutUrl" For="@(() => editSamlDownPartyForm.Model.SingleLogoutUrl)" />
            <div class="row active-group-outline">
                <div class="col">
                    <div class="form-group active-group">
                        <FInputSelect @bind-Value="editSamlDownPartyForm.Model.LogoutRequestBinding" For="@(() => editSamlDownPartyForm.Model.LogoutRequestBinding)" IncludeActiveFormGroup="false">
                            <option value="@SamlBindingType.Redirect">@SamlBindingType.Redirect</option>
                            <option value="@SamlBindingType.Post">@SamlBindingType.Post</option>
                        </FInputSelect>
                    </div>
                </div>
                <div class="col">
                    <div class="form-group active-group">
                        <FInputSelect @bind-Value="editSamlDownPartyForm.Model.LogoutResponseBinding" For="@(() => editSamlDownPartyForm.Model.LogoutResponseBinding)" IncludeActiveFormGroup="false">
                            <option value="@SamlBindingType.Redirect">@SamlBindingType.Redirect</option>
                            <option value="@SamlBindingType.Post">@SamlBindingType.Post</option>
                        </FInputSelect>
                    </div>
                </div>
            </div>
            <button type="button" class="btn btn-link btn-xs" @onclick="@(() => showAdvanced = !showAdvanced)">@($"{(showAdvanced ? "Hide" : "Show")} advanced settings")</button>
            @if (showAdvanced)
            {
                <FInputTextList @bind-ValueList="editSamlDownPartyForm.Model.Claims" For="@(() => editSamlDownPartyForm.Model.Claims)" />
                <div class="form-group active-group active">
                    <div class="drag-drop-zone input-control">
                        <InputFile multiple OnChange="OnSamlDownPartyCertificateFileSelectedAsync" />
                        @samlDownPartyCertificateFileStatus
                    </div>
                    <Label For="@(() => editSamlDownPartyForm.Model.Keys)" class="label-control" />
                    <ValidationMessage For="@(() => editSamlDownPartyForm.Model.Keys)" />
                    <ul class="list-group">
                        @foreach (var certificateInfo in certificateInfoList)
                        {
                            <li class="list-group-item">
                                <div class="d-flex">
                                    <div class="mr-auto p-2">
                                        <strong>@certificateInfo.Subject</strong><br />
                                        Valid from @certificateInfo.ValidFrom.ToShortDateString() to @certificateInfo.ValidTo.ToShortDateString()<br />
                                        Thumbprint: @certificateInfo.Thumbprint
                                    </div>
                                    <div class="p-2">
                                        <button type="button" class="btn btn-link" title="Remove" @onclick="@(() => RemoveSamlDownPartyCertificate(certificateInfo))"><span class="oi oi-delete" aria-hidden="true"></span></button>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
                <FInputSelect @bind-Value="editSamlDownPartyForm.Model.SignatureAlgorithm" For="@(() => editSamlDownPartyForm.Model.SignatureAlgorithm)">
                    <option value="@Saml2SecurityAlgorithms.RsaSha1Signature">RSA-SHA-1</option>
                    <option value="@Saml2SecurityAlgorithms.RsaSha256Signature">RSA-SHA-256</option>
                    <option value="@Saml2SecurityAlgorithms.RsaSha384Signature">RSA-SHA-384</option>
                    <option value="@Saml2SecurityAlgorithms.RsaSha512Signature">RSA-SHA-512</option>
                </FInputSelect>
                <FInputSelect @bind-Value="editSamlDownPartyForm.Model.CertificateValidationMode" For="@(() => editSamlDownPartyForm.Model.CertificateValidationMode)">
                    <option value="@X509CertificateValidationMode.None">None</option>
                    <option value="@X509CertificateValidationMode.ChainTrust">Chain trust</option>
                    <option value="@X509CertificateValidationMode.PeerTrust">Peer trust</option>
                    <option value="@X509CertificateValidationMode.PeerOrChainTrust">Peer or chain trust</option>
                </FInputSelect>
                <FInputSelect @bind-Value="editSamlDownPartyForm.Model.RevocationMode" For="@(() => editSamlDownPartyForm.Model.RevocationMode)">
                    <option value="@X509RevocationMode.NoCheck">No check</option>
                    <option value="@X509RevocationMode.Offline">Offline</option>
                    <option value="@X509RevocationMode.Online">Online</option>
                </FInputSelect>
                <FInputText @bind-Value="editSamlDownPartyForm.Model.IdSIssuer" For="@(() => editSamlDownPartyForm.Model.IdSIssuer)" />
                <FInputNumber @bind-Value="editSamlDownPartyForm.Model.SubjectConfirmationLifetime" For="@(() => editSamlDownPartyForm.Model.SubjectConfirmationLifetime)" />
                <FInputNumber @bind-Value="editSamlDownPartyForm.Model.IssuedTokenLifetime" For="@(() => editSamlDownPartyForm.Model.IssuedTokenLifetime)" />
                <FInputNumber @bind-Value="editSamlDownPartyForm.Model.MetadataLifetime" For="@(() => editSamlDownPartyForm.Model.MetadataLifetime)" />
            }
            @if (!createMode && deleteAcknowledge)
            {
                <div class="alert alert-danger" role="alert">
                    <div>
                        You are about to delete saml up party "@currentDownPartyName", are you sure?
                    </div>

                    <div class="mt-3">
                        <button type="button" class="btn btn-secondary" @onclick="@(async () => await DeleteSamlDownPartyAsync(currentDownPartyName))">Yes delete</button>
                        <button type="button" class="btn btn-secondary" @onclick="@(() => deleteAcknowledge = false)">No</button>
                    </div>
                </div>
            }
        </div>
        <div class="modal-footer">
            @if (!createMode)
            {
                <button type="button" class="btn btn-link" @onclick="@(() => deleteAcknowledge = true)">Delete</button>
            }
            <button type="submit" class="btn btn-primary">@(@createMode ? "Create" : "Update")</button>
            <button type="button" class="btn btn-secondary" @onclick="@(() => editSamlDownPartyModal.Hide())">Cancel</button>
        </div>
    </PageEditForm>
</Modal>