@inherits LayoutComponentBase

<nav class="navbar navbar-expand navbar-light bg-light navbar-main">
    <a class="navbar-brand">FoxIDs</a>
    <ul class="navbar-nav mr-auto">
        @if (!RouteBindingLogic.IsMasterTenant)
        {
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" id="trackNavbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Select Track
                </a>
                <div class="dropdown-menu searchDropdown" aria-labelledby="trackNavbarDropdown">
                    <div class="input-group mb-3">
                        <input type="text" class="form-control" placeholder="Search track">
                        <div class="input-group-append">
                            <button class="btn btn-primary" type="submit">Go</button>
                        </div>
                    </div>
                    <a class="dropdown-item">Track a</a>
                    <a class="dropdown-item">Track b</a>
                    <a class="dropdown-item">Track c</a>
                    <a class="dropdown-item">Track d</a>
                </div>
            </li>
        }
    </ul>
    <ul class="navbar-nav">
        @if (RouteBindingLogic.IsMasterTenant)
        {
            <li class="nav-item">
                <button class="nav-link btn btn-link" @onclick="@(() => { CreateTenantModalInitialization(); createTenantModal.Show(); })"><span class="oi oi-plus" aria-hidden="true"></span> Create Tenant</button>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link"><span class="oi oi-plus" aria-hidden="true"></span> Create Track</a>
            </li>
        }
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" id="meNavbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Me
            </a>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="meNavbarDropdown">
                <a class="dropdown-item">Me</a>
                <div class="dropdown-divider"></div>
                <LoginDisplay />
            </div>
        </li>
    </ul>
</nav>

<nav class="navbar navbar-expand navbar-light bg-light navbar-second">
    <div class="container-lg">
        <ul class="navbar-nav">
            @if (RouteBindingLogic.IsMasterTenant)
            {
                <TenantLiNavLink href="tenants">
                    Tenants
                </TenantLiNavLink>
            }
            <TenantLiNavLink href="parties">
                Parties
            </TenantLiNavLink>
            <TenantLiNavLink href="users">
                Users
            </TenantLiNavLink>
            <TenantLiNavLink href="certificates">
                Certificates
            </TenantLiNavLink>
            <TenantLiNavLink href="text">
                Text
            </TenantLiNavLink>
            @if (RouteBindingLogic.IsMasterTenant)
            {
                <TenantLiNavLink href="passwordrisklist">
                    Password Risk
                </TenantLiNavLink>
            }
        </ul>
    </div>
</nav>

<Modal @ref="createTenantModal" Title="Create Tenant">
    <EditForm EditContext="@createTenantEditContext" OnSubmit="OnSubmitAsync">
        <div class="modal-body">
            <DataAnnotationsValidator />
            @*Microsoft.AspNetCore.Components.DataAnnotations.Validation package: <ObjectGraphDataAnnotationsValidator />, validate sub objects [ValidateComplexType] *@
            @if (!createTenantError.IsNullOrWhiteSpace()) 
            {
                <div class="alert alert-danger" role="alert">
                    @createTenantError
                </div>
            }

            <div class="form-group active-group">
                <InputText @bind-Value="createTenant.Name" class="form-control input-control" />
                <Label For="@(() => createTenant.Name)" class="label-control" />
                <ValidationMessage For="@(() => createTenant.Name)" />
            </div>
            <div class="form-group active-group">
                <InputText @bind-Value="createTenant.AdministratorEmail" class="form-control input-control" />
                <Label For="@(() => createTenant.AdministratorEmail)" class="label-control" />
                <ValidationMessage For="@(() => createTenant.AdministratorEmail)" />
            </div>
            <div class="form-group active-group">
                <InputText @bind-Value="createTenant.AdministratorPassword" class="form-control input-control" />
                <Label For="@(() => createTenant.AdministratorPassword)" class="label-control" />
                <ValidationMessage For="@(() => createTenant.AdministratorPassword)" />
            </div>
        </div>
        <div class="modal-footer">
            <button type="submit" class="btn btn-primary">Create</button>
            <button type="button" class="btn btn-secondary" @onclick="@(() => createTenantModal.Hide())">Cancel</button>
        </div>
    </EditForm>
</Modal>

<div class="container-lg main-container">
    @Body
</div>