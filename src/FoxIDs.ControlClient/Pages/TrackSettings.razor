@page "/{tenantName}/tracksettings"
@inherits PageBase

<ul class="nav nav-tabs">
    @if (TrackSelectedLogic.IsTrackSelected && !IsMasterTenant && IsMasterTrack)
    {
        <li class="nav-item">
            <a class="nav-link" href="@tenantSettingsHref">Tenant settings</a>
        </li>
    }
    <li class="nav-item">
        <a class="nav-link active">Track settings</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@mailSettingsHref">Mail settings</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" href="@claimMappingsHref">Claim mappings</a>
    </li>
</ul>

<div class="tab-content">
    <PageEditForm @ref="trackSettingsForm" TModel="TrackSettingsViewModel" OnAfterInit="UpdateTrackViewModelAfterInit" OnValidSubmit="OnUpdateTrackValidSubmitAsync">
        @if (TrackSelectedLogic.IsTrackSelected)
        {
            <div class="modal-body">
                @if (!deleteTrackError.IsNullOrWhiteSpace())
                {
                    <div class="alert alert-danger" role="alert">
                        @deleteTrackError
                    </div>
                }
                <FFieldText @bind-Value="trackSettingsForm.Model.FormattedName" For="@(() => trackSettingsForm.Model.Name)" />
                <FInputNumber @bind-Value="trackSettingsForm.Model.SequenceLifetime" For="@(() => trackSettingsForm.Model.SequenceLifetime)" Focus="true" />
                <FInputNumber @bind-Value="trackSettingsForm.Model.MaxFailingLogins" For="@(() => trackSettingsForm.Model.MaxFailingLogins)" />
                <FInputNumber @bind-Value="trackSettingsForm.Model.FailingLoginCountLifetime" For="@(() => trackSettingsForm.Model.FailingLoginCountLifetime)" />
                <FInputNumber @bind-Value="trackSettingsForm.Model.FailingLoginObservationPeriod" For="@(() => trackSettingsForm.Model.FailingLoginObservationPeriod)" />
                <FInputNumber @bind-Value="trackSettingsForm.Model.PasswordLength" For="@(() => trackSettingsForm.Model.PasswordLength)" />
                <FInputToggleN @bind-Value="trackSettingsForm.Model.CheckPasswordComplexity" For="@(() => trackSettingsForm.Model.CheckPasswordComplexity)" />
                <FInputToggleN @bind-Value="trackSettingsForm.Model.CheckPasswordRisk" For="@(() => trackSettingsForm.Model.CheckPasswordRisk)" />
                @{var includeAllowIframeOnDomainsLabel = trackSettingsForm.Model.AllowIframeOnDomains?.Count > 0;}
                <div class="form-group active-group active">
                    <Label For="@(() => trackSettingsForm.Model.AllowIframeOnDomains)" class="label-control" />
                    <FInputTextList @bind-ValueList="trackSettingsForm.Model.AllowIframeOnDomains" For="@(() => trackSettingsForm.Model.AllowIframeOnDomains)" IncludeActiveFormGroup="false" DynamicFirstRow="true" AddOneMoreName="Domain" />
                </div>

                @if (deleteTrackAcknowledge)
                {
                    <div class="alert alert-danger" role="alert">
                        <div>
                            You are about to delete track "@trackSettingsForm.Model.FormattedName" including the user repository, are you sure?
                        </div>

                        <div class="mt-3">
                            <button type="button" class="btn btn-secondary" @onclick="DeleteTrackAsync">Yes delete track</button>
                            <button type="button" class="btn btn-secondary" @onclick="@(() => deleteTrackAcknowledge = false)">No</button>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                @if (!IsMasterTrack)
                {
                    <button type="button" class="btn btn-link" @onclick="@(() => deleteTrackAcknowledge = true)">Delete track</button>
                }
                <button type="submit" class="btn btn-primary">Update</button>
            </div>
        }
    </PageEditForm>
</div>
