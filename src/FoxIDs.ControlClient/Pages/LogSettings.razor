@page "/{tenantName}/logsettings"
@inherits PageBase

<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link" href="@logsHref">Logs</a>
    </li>
    <li class="nav-item">
        <a class="nav-link active">Settings</a>
    </li>
</ul>

<div class="tab-content pt-4">
    <div class="card">
        <div class="card-body @(generalLogSettings.Edit ? "active" : string.Empty)">
            @if (TrackSelectedLogic.IsTrackSelected)
            {

                @if (generalLogSettings.Edit && !generalLogSettings.Error.IsNullOrWhiteSpace())
                {
                    <div class="alert alert-danger" role="alert">
                        @generalLogSettings.Error
                    </div>
                }

                @if (generalLogSettings.Edit)
                {
                    <PageEditForm @ref="generalLogSettings.Form" TModel="Api.LogSettings" OnValidSubmit="OnUpdateLogSettingsValidSubmitAsync">
                        @if (generalLogSettings.Form?.Model != null) {
                            <div class="modal-header">
                                Log settings
                            </div>
                            <div class="modal-body">
                                <FInputToggle @bind-Value="generalLogSettings.Form.Model.LogInfoTrace" For="@(() => generalLogSettings.Form.Model.LogInfoTrace)" TextType="e.d" />
                                <FInputToggle @bind-Value="generalLogSettings.Form.Model.LogClaimTrace" For="@(() => generalLogSettings.Form.Model.LogClaimTrace)" TextType="e.d" />
                                <FInputToggle @bind-Value="generalLogSettings.Form.Model.LogMessageTrace" For="@(() => generalLogSettings.Form.Model.LogMessageTrace)" TextType="e.d" />
                                <FInputToggle @bind-Value="generalLogSettings.Form.Model.LogMetric" For="@(() => generalLogSettings.Form.Model.LogMetric)" TextType="e.d" />
                            </div>
                            <div class="modal-footer">
                                <button type="submit" class="btn btn-primary">Update</button>
                                <button type="button" class="btn btn-secondary" @onclick="@(() => generalLogSettings.Edit = false)">Cancel</button>
                            </div>
                        }
                    </PageEditForm>
                }
                else
                {
                    <div>
                        <p>FoxIDs default log warnings, errors, critical errors and events to the log store. The trace level and metric are configurable.</p>
                        <p>Logs are saved for 6 month and thereafter deleted.</p>
                    </div>

                    <button class="btn btn-link text-left p-0" @onclick="@(async () => await ShowUpdateLogSettingsAsync())">
                        Change log settings
                    </button>
                }
            }            
        </div>
    </div>

    <h4 class="pt-4">Log streams</h4>
    <div class="card">
        <div class="card-body">
           
        </div>
    </div>
</div>
